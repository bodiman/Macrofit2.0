// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id          Int              @id @default(autoincrement())
  name             String?
  email            String           @unique
  macroPreferences UserPreference[]
}

model Kitchen {
  id          String  @id
  name        String  @unique
  description String?
  foods       Food[]
}

model Food {
  id           String      @id
  name         String
  description  String?
  kitchen_id   String
  active       Boolean
  serving_size Float
  updated      DateTime    @default(now()) @updatedAt
  kitchen      Kitchen     @relation(fields: [kitchen_id], references: [id])
  macros       FoodMacro[]

  @@unique([name, kitchen_id])
}

model FoodMacro {
  id        Int               @id @default(autoincrement())
  food_id   String
  metric_id String
  value     Float
  food      Food              @relation(fields: [food_id], references: [id])
  metric    NutritionalMetric @relation(fields: [metric_id], references: [id])

  @@unique([food_id, metric_id])
}

model NutritionalMetric {
  id          String           @id
  name        String           @unique
  description String?
  unit        String // e.g., "g", "mg", "kcal"
  preferences UserPreference[]
  foodMacros  FoodMacro[]
}

model UserPreference {
  id        Int               @id @default(autoincrement())
  user_id   Int
  metric_id String
  min_value Float?
  max_value Float?
  user      User              @relation(fields: [user_id], references: [user_id])
  metric    NutritionalMetric @relation(fields: [metric_id], references: [id])

  @@unique([user_id, metric_id])
}
